
package mcassist;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Container;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map.Entry;
import javax.swing.BoxLayout;
import javax.swing.JFrame;
import javax.swing.UIManager;
import org.json.JSONException;

/**
 *
 * @author alexis
 */
public class IHM extends javax.swing.JFrame {

    /**
     * Creates new form IHM
     */
    public IHM() {
        initComponents();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        itemViews = new ArrayList();

        loadItems();
        
        steps = new ArrayList();
        
        Step ewan = new Step();
        
        steps.add(ewan);
        
                Step ewan2 = new Step();
        
        steps.add(ewan2);
        
        
        updateList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        stepScroll = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        itemsScroll = new javax.swing.JScrollPane();
        jLabel2 = new javax.swing.JLabel();
        selectedItemLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Crafting Assistant for Minecraft");
        setLocationByPlatform(true);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Crafting assistant for Minecraft");

        jLabel2.setText("Item sélectionné :");

        selectedItemLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        selectedItemLabel.setText("--");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(stepScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemsScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(selectedItemLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(selectedItemLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(stepScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                    .addComponent(itemsScroll)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IHM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IHM().setVisible(true);
            }
        });
    }
    
    public void reset() {
        
    }
    
    public void setItem(Item item) {
        
    }
    
    private void addStep(Craft craft) {
        
    }
    
    private void loadItems() {
        Container cont = new Container();
        itemViews.clear();
        
        CraftLoader cl = new CraftLoader();

        try {
            cl.loadCraftsFromFile("C:\\VPC\\crafts.json");
        } catch (JSONException | IOException ex) {
        }
        
      
        for(Entry<String, Item> entry : cl.getItems().entrySet()) {
            String id = entry.getKey();
            Item item = entry.getValue();

    
            final ItemView iv = new ItemView(item, id);

            iv.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseReleased(java.awt.event.MouseEvent evt) {
                    for(ItemView currentItemView : itemViews) {
                        currentItemView.setActive(false);
                    }
                    iv.setActive(true);
                    selectedItemLabel.setText(iv.getItem().getName());
                }
            });

            cont.add(iv);
            itemViews.add(iv);
        }



        cont.setLayout(new GridLayout(0, 3, 0, 0));
        itemsScroll.setViewportView(cont);        
    }
    
    private void updateList() {
        Container cont = new Container();
        
        int index = 1;
        
        for(Step step : steps) {
            step.setStepNumber(index);
            cont.add(step);
            index++;
        }
        
        cont.setLayout(new BoxLayout(cont, BoxLayout.PAGE_AXIS));
        stepScroll.setViewportView(cont);
    }
    
    private ArrayList<Step> steps;
    private ArrayList<ItemView> itemViews;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane itemsScroll;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel selectedItemLabel;
    private javax.swing.JScrollPane stepScroll;
    // End of variables declaration//GEN-END:variables
}
