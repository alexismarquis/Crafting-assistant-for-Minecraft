
package mcassist;

import java.awt.Container;
import java.awt.GridLayout;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map.Entry;
import javax.swing.BoxLayout;
import javax.swing.JFrame;
import javax.swing.UIManager;
import org.json.JSONException;

/**
 *
 * @author alexis
 */
public class IHM extends javax.swing.JFrame {

    /**
     * Creates new form IHM
     */
    public IHM() {
        initComponents();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        itemViews = new ArrayList();

        loadItems();
        
        resources = new ArrayList();
        steps = new ArrayList();
        
                
        updateList();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        stepScroll = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        itemsScroll = new javax.swing.JScrollPane();
        jLabel2 = new javax.swing.JLabel();
        selectedItemLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        resourcesScroll = new javax.swing.JScrollPane();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Crafting Assistant for Minecraft");
        setBackground(new java.awt.Color(255, 255, 250));
        setLocationByPlatform(true);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Menlo", 1, 18)); // NOI18N
        jLabel1.setText("Crafting Assistant for Minecraft");

        jLabel2.setText("Selected item :");

        selectedItemLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        selectedItemLabel.setText("--");

        jLabel3.setText("Needed resources :");

        resourcesScroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        jLabel4.setText("Alexis MARQUIS");

        jLabel5.setText("Julien VANNIER");

        jLabel6.setText("Florian PREVOST");

        jLabel7.setText("Difficult√© :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(stepScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemsScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(selectedItemLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(resourcesScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectedItemLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(resourcesScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(stepScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                    .addComponent(itemsScroll)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IHM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IHM().setVisible(true);
            }
        });
    }
    
    public void reset() {
        
    }
    
    public void setItem(Item item) {
        selectedItemLabel.setText(item.getName());
        steps.clear();
        resources.clear();
        HashMap<Item, Integer> items = item.getCrafts().get(0).StepByStepItem();
        
        for(Entry<Item, Integer> entry : items.entrySet()) {
            Integer quantity = entry.getValue();
            Item stepItem = entry.getKey();
            
            addStep(stepItem, quantity);
        }
        
        addStep(item, 1);
        
        HashMap<Item, Integer> resList = item.getCrafts().get(0).StepByStepRessource();
        
        for(Entry<Item, Integer> entry : resList.entrySet()) {
            Integer quantity = entry.getValue();
            Item stepItem = entry.getKey();
            
            ResourceView rv = new ResourceView(stepItem, quantity);
            
            resources.add(rv);
        }
        
        
        updateList();
    }
    
    private void addStep(Item item, Integer quantity) {
        Step step = new Step(item, quantity);
      
        steps.add(step);
    }
    
    
    private void loadItems() {
        Container cont = new Container();
        itemViews.clear();
        
        CraftLoader cl = new CraftLoader();

        try {
            //cl.loadCraftsFromFile("C:\\VPC\\crafts.json");
            cl.loadCraftsFromFile("crafts.json");
        } catch (JSONException | IOException ex) {
        }
        
      
        for(Entry<String, Item> entry : cl.getItems().entrySet()) {
            String id = entry.getKey();
            Item item = entry.getValue();

            if(!item.isRessource()) {

                final ItemView iv = new ItemView(item);

                iv.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseReleased(java.awt.event.MouseEvent evt) {
                        for(ItemView currentItemView : itemViews) {
                            currentItemView.setActive(false);
                        }
                        iv.setActive(true);
                        setItem(iv.getItem());
                    }
                });

                cont.add(iv);
                itemViews.add(iv);
                                
            }
        }



        cont.setLayout(new GridLayout(0, 3, 0, 0));
        itemsScroll.setViewportView(cont);
    }
    
    private void updateList() {
        Container cont = new Container();
        
        int index = 1;
        
        for(Step step : steps) {
            step.setStepNumber(index);
            cont.add(step);
            index++;
        }
        
        cont.setLayout(new BoxLayout(cont, BoxLayout.PAGE_AXIS));
        stepScroll.setViewportView(cont);
        
        Container resCont = new Container();
        
        for(ResourceView resource : resources) {
            resCont.add(resource);
        }
        
        resCont.setLayout(new BoxLayout(resCont, BoxLayout.LINE_AXIS));
        resourcesScroll.setViewportView(resCont);
        
    }
    
    private ArrayList<Step> steps;
    private ArrayList<ResourceView> resources;
    private ArrayList<ItemView> itemViews;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane itemsScroll;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane resourcesScroll;
    private javax.swing.JLabel selectedItemLabel;
    private javax.swing.JScrollPane stepScroll;
    // End of variables declaration//GEN-END:variables
}
